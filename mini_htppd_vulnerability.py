import os
import subprocess


def download_backup_settings(filename):
    folder_name = 'mini_xml'
    os.makedirs(folder_name, exist_ok=True)

    with open(filename, 'r') as file:
        ips = file.read().splitlines()

    for ip in ips:
        url = f"http://{ip}/web/backupsettings.conf"
        command = f"wget --timeout=2 --tries=1 -O {folder_name}/{ip}.xml {url}"
        exit_code = os.system(command)

        if exit_code == 0:
            print(f"Downloaded backupsettings.conf from {ip} and saved as {folder_name}/{ip}.xml")
        else:
            print(f"Failed to download backupsettings.conf from {ip}")


# Usage
download_backup_settings("mini_alive.txt")

# Executing Linux Commands
os.chdir("mini_xml")
grep = 'grep -rl "kt_index.asp" > ../boa_alive.txt'
luci = f'find -type f -empty | sed "s|^\./||" > ../luci_alive.txt'
xargs = 'xargs rm < ../boa_alive.txt | xargs rm < ../luci_alive.txt'
subprocess.run(grep, shell=True)
subprocess.run(luci, shell=True)
subprocess.run(xargs, shell=True)
subprocess.run('sed -i "s/\.xml$//" ../boa_alive.txt', shell=True)
subprocess.run('sed -i "s/\.xml$//" ../luci_alive.txt', shell=True)


# DELETE IRRELEVANT FILES
find_command = f"find -type f -exec grep -l '<HTML>' {{}} +"
output = subprocess.run(find_command, shell=True, capture_output=True, text=True).stdout

# Remove the files
if output:
    file_paths = output.splitlines()
    for file_path in file_paths:
        subprocess.run(['rm', file_path])

# sh script
script_path = "../remove_null.sh"

# Call the shell script using subprocess
subprocess.run(["sh", script_path])